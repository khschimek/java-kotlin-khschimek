package com.example.kettle;
public class Kettle{
    public static final int DEFAULT_WATER = 0;
    private int water;
    public static final String DEFAULT_MATERIAL = "Copper";
    private String material;

    public Kettle() {
        this(DEFAULT_WATER,DEFAULT_MATERIAL);
    }

    public int getWater() {
        return water;
    }

    public void setWater(int water) {
        if (water >= 0) {
            this.water = water;
        } else {
            throw new IllegalArgumentException("water cannot be negative");
        }
    }

    public String getMaterial() {
        return material;
    }

    public void setMaterial(String material) {
        this.material = material;
    }

    public Kettle(int water, String material) {
        this.water = water;
        this.material = material;
    }




package com.example.kettle;
import static org.junit.Assert.*;

import android.database.DatabaseErrorHandler;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
class KettleTest {

    Kettle kettle;
    @Before
    public void setUp() throws Exception {
        kettle = new Kettle();
    }

    @After
    public void tearDown() throws Exception {
    }

    @Test
    public void getWater() {
        assertEquals(Kettle.DEFAULT_WATER,kettle.getWater());
    }

    @Test
    public void setWaterOk() {
        kettle.setWater(33);
        assertEquals(33,kettle.getWater());

    }

    @Test(expected = IllegalArgumentException.class)
    public void setWaterBad() {
        kettle.setWater(-33);
        assertEquals(-33,kettle.getWater());
    }

    @Test
    public void getMaterial() {
    }

    @Test
    public void setMaterial() {
    }
}